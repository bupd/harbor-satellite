// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: labels.sql

package database

import (
	"context"
	"time"
)

const createLabel = `-- name: CreateLabel :one
INSERT INTO labels (label_name, created_at, updated_at)
VALUES ($1, $2, $3)
RETURNING id, label_name, created_at, updated_at
`

type CreateLabelParams struct {
	LabelName string
	CreatedAt time.Time
	UpdatedAt time.Time
}

func (q *Queries) CreateLabel(ctx context.Context, arg CreateLabelParams) (Label, error) {
	row := q.db.QueryRowContext(ctx, createLabel, arg.LabelName, arg.CreatedAt, arg.UpdatedAt)
	var i Label
	err := row.Scan(
		&i.ID,
		&i.LabelName,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteLabel = `-- name: DeleteLabel :exec
DELETE FROM labels
WHERE id = $1
`

func (q *Queries) DeleteLabel(ctx context.Context, id int32) error {
	_, err := q.db.ExecContext(ctx, deleteLabel, id)
	return err
}

const getLabelByID = `-- name: GetLabelByID :one
SELECT id, label_name, created_at, updated_at FROM labels
WHERE id = $1
`

func (q *Queries) GetLabelByID(ctx context.Context, id int32) (Label, error) {
	row := q.db.QueryRowContext(ctx, getLabelByID, id)
	var i Label
	err := row.Scan(
		&i.ID,
		&i.LabelName,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getLabelByName = `-- name: GetLabelByName :one
SELECT id, label_name, created_at, updated_at FROM labels
WHERE label_name = $1
`

func (q *Queries) GetLabelByName(ctx context.Context, labelName string) (Label, error) {
	row := q.db.QueryRowContext(ctx, getLabelByName, labelName)
	var i Label
	err := row.Scan(
		&i.ID,
		&i.LabelName,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
